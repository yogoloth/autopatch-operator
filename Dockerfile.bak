# Build the manager binary
#FROM golang:1.13 as builder
FROM wangjl/centos8_go:0.9 as builder

WORKDIR /workspace
# Copy the Go Modules manifests
COPY go.mod go.mod
COPY go.sum go.sum
# cache deps before building and copying source so that we don't need to re-download as much
# and so that source changes don't invalidate our downloaded layer
RUN go mod download

# Copy the go source
COPY main.go main.go
COPY api/ api/
COPY controllers/ controllers/

COPY mutatingwebhook.go mutatingwebhook.go
COPY modules/ modules/
COPY vendor/ vendor/
#COPY Makefile Makefile

# Build
#RUN make libjq

#RUN GOFLAGS=-mod=vendor CGO_ENABLED=1 GOOS=linux GOARCH=amd64 GO111MODULE=on go build --gcflags '-I ./modules/include ' --ldflags '-linkmode external -extldflags "-Wl,-Bstatic  -L ./modules/lib -ljq -lonig -Wl,-Bdynamic -lm -lc"' -a -o manager main.go mutatingwebhook.go

#RUN apt install libjq-dev
#RUN GOFLAGS=-mod=vendor CGO_ENABLED=1 GOOS=linux GOARCH=amd64 GO111MODULE=on go build -o manager main.go mutatingwebhook.go
RUN CGO_ENABLED=1 GOOS=linux GOARCH=amd64 GO111MODULE=on go build -o manager main.go mutatingwebhook.go


# Use distroless as minimal base image to package the manager binary
# Refer to https://github.com/GoogleContainerTools/distroless for more details
FROM gcr.io/distroless/static:nonroot
WORKDIR /
COPY --from=builder /workspace/manager .
USER nonroot:nonroot

ENTRYPOINT ["/manager"]
